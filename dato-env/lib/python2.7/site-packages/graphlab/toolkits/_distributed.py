"""@package graphlab.toolkits

Internal Distributed Toolkit Calling
"""
'''
Copyright (C) 2015 Dato, Inc.
All rights reserved.

This software may be modified and distributed under the terms
of the BSD license. See the DATO-PYTHON-LICENSE file for details.
'''
import time
import logging
from graphlab.connect import _get_metric_tracker
from graphlab.deploy.dato_distributed.pipeline.dml import _dml as dml
from graphlab.toolkits._main import ToolkitError


def run(toolkit_name, options, env = 'auto', verbose=True, **kwargs):
    """
    Internal function to execute toolkit on the graphlab server.

    Parameters
    ----------
    toolkit_name : string
        The name of the toolkit.

    options : dict
        A map containing the required input for the toolkit function,
        for example: {'graph': g, 'reset_prob': 0.15}.

    verbose : bool
        If true, enable progress log from server.

    Returns
    -------
    out : dict
        The toolkit specific model parameters.

    Raises
    ------
    RuntimeError
        Raises RuntimeError if the server fail executing the toolkit.
    """
    start_time = time.time()
    (success, message, params) = dml.dml_exec(toolkit_name, options, env, verbose, **kwargs)
    end_time = time.time()

    metric_name = 'distributed.toolkit.%s.executed' % (toolkit_name)
    track_props = {}
    track_props['success'] = success
    if not success:
        logging.getLogger(__name__).error("Toolkit error: " + message)
        track_props['message'] = message
        _get_metric_tracker().track(metric_name, value=1,
                            properties=track_props, send_sys_info=False)
        raise ToolkitError(str(message))

    track_props['runtime'] = end_time - start_time
    _get_metric_tracker().track(metric_name, value=1,
                            properties=track_props, send_sys_info=False)

    return params
